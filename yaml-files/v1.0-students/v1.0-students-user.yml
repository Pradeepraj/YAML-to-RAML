swagger: '2.0'
info:
  description: Description in info
  version: 1.0.0
  title: Title in info
  termsOfService: ''
  contact:
    email: postpradeepr@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:8110'
basePath: /v1.0
tags:
  - name: Name in tags (User)
    description: Description in tags (Retrieves all User)
schemes:
  - http
  - https
paths:
  /students/{userId}:
    get:
      tags:
        - Tags inside get method
      summary: Summary inside get method (retrieves a single user)
      description: Description inside get method (retrieves a single user)
      operationId: getAUser
      produces:
        - application/json
      parameters:
        - name: "userId"
          in: "path"
          description: "ID of user to return"
          required: true
          type: "integer"
          format: "int64"
        - name: fields
          in: query
          description: Filter fields
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: sort
          in: query
          description: Sorting details
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: page
          in: query
          description: Page number
          required: false
          type: integer
          format: int32
          minimum: 1
        - name: rows
          in: query
          description: No of rows in a page
          required: false
          type: integer
          format: int64
          minimum: 1
        - name: format
          in: query
          description: Response type
          required: false
          type: array
          items:
            type: string
            enum:
              - json
              - csv
              - tsv
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Operation failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: API not found
definitions:
  User:
    type: object
    required:
      - userId
    properties:
      userId:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      pagination:
        type: object
        items:
          $ref: '#/definitions/PaginationDetails'
  PaginationDetails:
    type: object
    properties:
      page:
        type: integer
        format: int64
      pages:
        type: integer
        format: int64
      rows:
        type: integer
        format: int64
      total:
        type: integer
        format: int64
  ErrorResponse:
    type: object
    required:
      - status
      - message
      - reason
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
      reason:
        type: object
        properties:
          errorCode:
            type: string
          errorInfo:
            type: string
